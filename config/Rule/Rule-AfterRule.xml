<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule created="1716276583373" id="c0a800918f991168818f9a0e5bcd0087" language="beanshell" modified="1716277071842" name="After Rule" type="WebServiceAfterOperationRule">
  <Description>The Web Services connector will call this rule after performing ANY defined operation. This rule can be used to update the parsed resource object and/or add persistent values to the application's data.
(See information about what to return for more information)</Description>
  <Signature returnType="Object">
    <Inputs>
      <Argument name="log">
        <Description>
          The log object associated with the SailPointContext.
        </Description>
      </Argument>
      <Argument name="context">
        <Description>
              A sailpoint.api.SailPointContext object that can be used to query the database if necessary.
            </Description>
      </Argument>
      <Argument name="application">
        <Description>The application whose data file is being processed.</Description>
      </Argument>
      <Argument name="requestEndPoint">
        <Description>The current request information contain header, body ,response object</Description>
      </Argument>
      <Argument name="processedResponseObject">
        <Description>Response Object processed by the Web services connector</Description>
      </Argument>
      <Argument name="rawResponseObject">
        <Description>Response Object returned from the end system</Description>
      </Argument>
      <Argument name="restClient">
        <Description>REST Client Object</Description>
      </Argument>
    </Inputs>
    <Returns>
      <Argument name="Map">
        <Description>A newly created map containing a 'data' key and optionally, a 'connectorStateMap' key.  The 'data' value should be set to a map containing a parsed list of accounts/groups.  
                The 'connectorStateMap' value can be set to a map containing values that will be persisted to the application definition.
                </Description>
      </Argument>
    </Returns>
  </Signature>
  <Source>System.out.println("processedResponseObject"+processedResponseObject);

 for (Map iterateMap : processedResponseObject) { 
      if (iterateMap != null ) { 
            Set keySet = iterateMap.keySet(); 
            for (String s : keySet) { 
                System.out.println(s); 
                if (s.equals("given_name")) { 
           String forStr = (String) iterateMap.get("user_email"); 
                    System.out.println("user_email: " + forStr ); 
           // iterateMap.put("given_name", forStr); 
        } 
            } 
        } 
    } </Source>
</Rule>
